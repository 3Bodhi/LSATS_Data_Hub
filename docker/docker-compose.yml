# LSATS Data Hub - Docker Compose Configuration

services:
  # Main PostgreSQL database for LSATS data
  lsats-postgres:
    image: postgres:15-alpine
    container_name: lsats-database
    environment:
      # Database configuration
      POSTGRES_DB: lsats_db
      POSTGRES_USER: lsats_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-lsats_dev_password}
      # Performance tuning for development
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      # Persistent data storage
      - lsats_postgres_data:/var/lib/postgresql/data

      # CORRECTED: Individual file mounting for initialization scripts
      # These lines map specific files from your host to the container
      # The format is: host_path:container_path
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./docker/postgres/schemas.sql:/docker-entrypoint-initdb.d/02-schemas.sql:ro

      # The :ro flag makes these files read-only inside the container
      # This prevents accidental modification and improves security
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lsats_user -d lsats_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lsats_network

  # Optional: pgAdmin for database management (web interface)
  lsats-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lsats-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@lsats.local
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - lsats_pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      lsats-postgres:
        condition: service_healthy
    networks:
      - lsats_network
    profiles:
      - tools # Only start with: docker-compose --profile tools up

  # Future: LSATS ingestion service (when we build it)
  lsats-ingestion:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: lsats-ingestion
    environment:
      # Database connection using internal Docker networking
      DATABASE_URL: postgresql://lsats_user:${DB_PASSWORD:-lsats_dev_password}@lsats-postgres:5432/lsats_db
      # Use existing LSATS environment variables
      TDX_BASE_URL: ${TDX_BASE_URL}
      TDX_API_TOKEN: ${TDX_API_TOKEN}
      TDX_APP_ID: ${TDX_APP_ID}
    volumes:
      # Mount the data directory for CSV files
      - ./data:/app/data:ro
      # Mount the entire project for development (can be removed in production)
      - .:/app/lsats:ro
    depends_on:
      lsats-postgres:
        condition: service_healthy
    networks:
      - lsats_network
    profiles:
      - ingestion # Only start when specifically requested

# Persistent storage volumes
volumes:
  lsats_postgres_data:
    driver: local
  lsats_pgadmin_data:
    driver: local

# Internal Docker network for service communication
networks:
  lsats_network:
    driver: bridge
    name: lsats_network
